/*
 * CalWatch
 * Copyright (C) 2014 by Dan Wallach
 * Home page: http://www.cs.rice.edu/~dwallach/calwatch/
 * Licensing: http://www.cs.rice.edu/~dwallach/calwatch/licensing.html
 */

If you look at the full Git history of this file, you'll see it grew quite large at some points and
shrank down at others. Mostly it's served as the ongoing to-do list as well as notes for features in
progress.

==================================================================================================

Port to Android Wear
-- How to set up the emulator: http://www.tech-recipes.com/rx/49586/how-do-i-connect-an-android-wear-emulator-to-a-real-phone/
   adb -d forward tcp:5601 tcp:5601

-- How to connect to Bluetooth debugging for Moto 360: http://blog.timmattison.com/archives/2014/07/16/common-android-wear-tasks-for-developers/
    adb forward tcp:4444 localabstract:/adb-hub; adb connect localhost:4444

-- How to get a dump from the watch into a file and see it while it's going
    adb -s localhost:4444 logcat -v time | & tee logdumps/whatever.txt


Daydream?
    http://www.hascode.com/2013/01/using-the-android-daydream-api/
    http://developer.android.com/reference/android/service/dreams/DreamService.html
    -- looks almost exactly the same as implementing an activity, or the watchface API

Marshmallow permissions / updates
    http://android-developers.blogspot.com/2015/11/api-23-sdk-now-available-for-android.html
    http://developer.android.com/training/articles/wear-permissions.html

    TODO kill off the long-running service, doesn't need to start at boot time (on either platform)
    TODO better no-calendar icon

    Other stuff, while we're overhauling things:
    TODO Heisenbug investigation: when starting on a freshly wiped phone, weird rendering artifacts (negative numbers?) but it goes away
    - possibly fixed! (issue when event.startTime == event.endTime, which can happen after clipping)
    TODO Change phone config panel to show three simultaneous watchfaces with picker rather than three text names

    TODO Adopt Wear Compatibility Library
    https://github.com/googlesamples/android-WearCompanionLibrary
    https://github.com/googlesamples/android-WclDemoSample
    - Unclear if there's any real benefit for CalWatch in these libraries

    TODO Validate that CrashReporter still works

Low-bit / burn-in protection
    TODO low-bit on, burn-in off: add back in the calendar wedges
    TODO low-bit on, burn-in on: hollow out the hands, limit the backdrop to "lite", no calendar

Refactoring / reengineering
    TODO significant code overlap between mobile/MyViewAnim and wear/CalWatchFaceService
    - but differences are significant enough that it's not going to be very easy to move to /shared
    - factoring out the GoogleAPI stuff wasn't too bad, probably straightforward to refactor other stuff the same way

    TODO fix Gradle, presently requiring me to have the git version code in three places to work right
    (I tried putting it just in settings.gradle or the top-level build.gradle and this didn't work)

    TODO Rip out Observer/Listener logic (getting untenable) and redo with functional-reactive style

Right-to-left support
    TODO detect when we're in RTL mode
    TODO swap day/date block from 9 o'clock to 3 o'clock or leave alone?

Add internationalization strings
    Currently have localized strings for Spanish, Dutch, Turkish, German; need more

Deal with multiday events that aren't "all day" events
    TODO idea: resurrect all-day events by rendering them (and long events) as thin rings, perhaps separate from the main time wedges

TODO reshape around peek card?
    - Notes: the rect we get back is the rect *covered* by the card. Using the "top"
      of the rect, we'll know that from (0,0) - (full-width, rect-top) we're good to draw.

    - Given how large the cards are, we probably don't want to mess with the Moto 360 hack
      but instead just want to draw the face small, completely round, and be done with it.

    - Current kludge: draw a solid black rectangle inside the rect we're given

    - Potential real solution: extend the Moto 360 flat-bottom hack
      - Option 1: same watch center, just increase missingBottomPixels
      - Option 2: move watch center up partly

TODO update the slides
    Now a standard lecture in Comp215, so some updates in there already, but should it change
    from an "evolution of CalWatch" into a "how to code for Android" talk? Or not?

Longer-term items
    TODO custom background images?
