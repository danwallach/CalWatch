/*
 * CalWatch
 * Copyright (C) 2014 by Dan Wallach
 * Home page: http://www.cs.rice.edu/~dwallach/calwatch/
 * Licensing: http://www.cs.rice.edu/~dwallach/calwatch/licensing.html
 */

If you look at the full Git history of this file, you'll see it grew quite large at some points and
shrank down at others. Mostly it's served as the ongoing to-do list as well as notes for features in
progress.

==================================================================================================

Port to Android Wear
-- How to set up the emulator: http://www.tech-recipes.com/rx/49586/how-do-i-connect-an-android-wear-emulator-to-a-real-phone/
   adb -d forward tcp:5601 tcp:5601

-- How to connect to Bluetooth debugging for Moto 360: http://blog.timmattison.com/archives/2014/07/16/common-android-wear-tasks-for-developers/
    adb forward tcp:4444 localabstract:/adb-hub; adb connect 127.0.0.1:4444

-- How to get a dump from the watch into a file and see it while it's going
    adb -s localhost:4444 logcat -v time | & tee logdumps/whatever.txt

-- How to enable verbose logging from the command-line

    adb -d shell setprop log.tag.ClockFace VERBOSE
    adb -d shell setprop log.tag.ClockState VERBOSE
    adb -d shell setprop log.tag.MyViewAnim VERBOSE
    adb -d shell setprop log.tag.PhoneActivity VERBOSE
    adb -d shell setprop log.tag.CalendarFetcher VERBOSE
    adb -d shell setprop log.tag.CalendarPermission VERBOSE


Daydream?
    http://www.hascode.com/2013/01/using-the-android-daydream-api/
    http://developer.android.com/reference/android/service/dreams/DreamService.html
    -- looks almost exactly the same as implementing an activity, or the watchface API

Miscellaneous updates
    TODO Adopt Wear Compatibility Library
    https://github.com/googlesamples/android-WearCompanionLibrary
    https://github.com/googlesamples/android-WclDemoSample
    - Unclear if there's any real benefit for CalWatch in these libraries

    TODO Validate that CrashReporter still works

Refactoring / reengineering
    TODO significant code overlap between mobile/MyViewAnim and wear/CalWatchFaceService
    - but differences are significant enough that it's not going to be very easy to move to /shared
    - factoring out the GoogleAPI stuff wasn't too bad, probably straightforward to refactor other stuff the same way

    TODO fix Gradle, presently requiring me to have the git version code in three places to work right
    (I tried putting it just in settings.gradle or the top-level build.gradle and this didn't work)

    TODO Rip out Observer/Listener logic (getting untenable) and redo with functional-reactive style
    - CalendarFetcher now works in a vaguely functional style, but we'd want to get rid of the observers
      on ClockState

    TODO too much .toFloat() and .toDouble() in ClockFace -- cleanup?!
    - We could try to standardize everything with Float, but many of the trig function in Math require Double
    - Twice I've tried standardizing on Float and things break: loss of the second-hand (!), and misalignment of the stipple pattern,
      so the thing to try next is standardizing on Double.
    - There's something really subtle and weird about how Kotlin does floating point that I'm clearly missing.

Right-to-left support
    TODO detect when we're in RTL mode
    TODO swap day/date block from 9 o'clock to 3 o'clock or leave alone?

Deal with multiday events that aren't "all day" events
    TODO idea: resurrect all-day events by rendering them (and long events) as thin rings, perhaps separate from the main time wedges

TODO update the slides
    Now a standard lecture in Comp215, so some updates in there already, but should it change
    from an "evolution of CalWatch" into a "how to code for Android" talk? Or not? Also, worth
    adding Kotlin material.


Overhaul preferences pane on mobile
    TODO verify appearance on multiple phones / watches

    Material Design all the things!
        TODO make images transparent so we can change imagebutton backgrounds at runtime (tinting!)
        TODO replace overlaid switches with checkbox icon, tinting, etc.
          see Photos app multi-select for inspiration
        TODO replace overlaid radio icons -- use tinting / z-value / ?
          see Photos app multi-select for inspiration
        Layout
          TODO consistent spacing between watchface preview and buttons
          TODO consistent spacing between buttons
          TODO day/date textbox should be same size as other buttons
